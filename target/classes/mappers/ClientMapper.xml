<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gulaev.dao.ClientRepository">


  <insert id="create" parameterType="com.gulaev.model.Client" keyColumn="client_id"
    keyProperty="clientId" useGeneratedKeys="true">
    INSERT INTO clients (first_name, last_name, passport_id)
    VALUES (#{firstName}, #{lastName},
    <choose>
      <when test="passport != null">
        #{passport.passportId}
      </when>
      <otherwise>
        NULL
      </otherwise>
    </choose>
    )
  </insert>

  <update id="update" parameterType="com.gulaev.model.Client">
    UPDATE clients
    SET first_name = #{client.firstName}, last_name = #{client.lastName}
    <choose>
      <when test="client.passport != null">
        , passport_id = #{client.passport.passportId}
      </when>
      <otherwise>
        , passport_id = NULL
      </otherwise>
    </choose>
    WHERE client_id = #{client.clientId}
  </update>

  <!--  <update id="update" parameterType="com.gulaev.model.Client">-->
  <!--    <foreach collection="contracts" item="contract" separator=";">-->
  <!--      INSERT INTO contracts (start_date, payment_id, case_type_id, client_id, lawyer_id)-->
  <!--      VALUES (#{contract.startDate}, #{contract.payment.paymentId}, #{contract.caseType.caseTypeId}, #{clientId}, #{contract.lawyerId})-->
  <!--      ON DUPLICATE KEY UPDATE-->
  <!--      start_date = VALUES(start_date),-->
  <!--      payment_id = VALUES(payment_id),-->
  <!--      case_type_id = VALUES(case_type_id),-->
  <!--      client_id = VALUES(client_id),-->
  <!--      lawyer_id = VALUES(lawyer_id);-->
  <!--    </foreach>-->
  <!--    UPDATE clients-->
  <!--    SET first_name = #{firstName}, last_name = #{lastName}-->
  <!--    <choose>-->
  <!--      <when test="passport != null">-->
  <!--        , passport_id = #{passport.getPassportId}-->
  <!--      </when>-->
  <!--      <otherwise>-->
  <!--        , passport_id = NULL-->
  <!--      </otherwise>-->
  <!--    </choose>-->
  <!--    WHERE client_id = #{id}-->
  <!--  </update>-->



  <sql id="selectClient">
    SELECT c.client_id, c.first_name, c.last_name, p.passport_id, p.TIN, p.date_of_issue,
    p.issued_by
    FROM clients c
    LEFT JOIN passports p ON c.passport_id = p.passport_id
    WHERE c.client_id = #{clientId}
    <!--  SELECT * FROM clients WHERE client_id = #{clientId}-->
  </sql>

  <select id="getById" parameterType="java.lang.Integer" resultType="com.gulaev.model.Client"
    resultMap="ClientResultMap">
    <include refid="selectClient"/>
  </select>

  <delete id="deleteById" parameterType="int">
    DELETE FROM clients WHERE client_id = #{id}
  </delete>

  <select id="getAll" resultMap="ClientResultMap">
    SELECT * FROM clients;
  </select>


  <select id="selectContractsOfClient" parameterType="java.lang.Integer"
    resultType="com.gulaev.model.Contract">
    SELECT * FROM contracts WHERE contracts_id = #{contractId};
  </select>

  <resultMap id="ClientResultMap" type="com.gulaev.model.Client" autoMapping="false">
    <id property="clientId" column="client_id"/>
    <result property="firstName" column="first_name"/>
    <result property="lastName" column="last_name"/>
    <association property="passport"
      column="passport_id" javaType="com.gulaev.model.Passport"
      select="com.gulaev.dao.PassportRepository.getById"
      fetchType="eager"/>
    <collection property="bankCards" column="client_id"
      select="com.gulaev.dao.BankCardRepository.getByClientId"
      fetchType="lazy"/>
    <collection property="contracts" column="client_id"
      select="com.gulaev.dao.ContractRepository.getByClientId"
      fetchType="lazy"/>
  </resultMap>

</mapper>
